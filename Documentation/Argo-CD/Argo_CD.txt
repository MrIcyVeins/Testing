# Install Argo CD 

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

OR-------------------------------

kubectl create namespace argocd
kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/core-install.yaml

# Download Argo CD CLI 

curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd

---Port Forwarding---
kubectl port-forward svc/argocd-server -n argocd 8080:443

# Get secret & login 

```
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.p455w0rd}" | base64 -d

argocd login <ARGOCD_SERVER> --port-forward-namespace argocd   OR  ARGOCD_OPTS      export ARGOCD_OPTS='--port-forward-namespace argocd'
```

--------------------------------------------------------------------------------------------------

# Install Argo Workflows 

```
kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.4.5/install.yaml
```

### Install Argo CLI 

```
### Download the binary
curl -sLO https://github.com/argoproj/argo-workflows/releases/download/v3.4.5/argo-linux-amd64.gz

### Unzip
gunzip argo-linux-amd64.gz

### Make binary executable
chmod +x argo-linux-amd64

### Install argo cli
mv ./argo-linux-amd64 /usr/local/bin/argo

### Test installation
argo version
```
### Patch auth mode to (server) -no login required

```
kubectl patch deployment \
  argo-server \
  --namespace argo \
  --type='json' \
  -p='[{"op": "replace", "path": "/spec/template/spec/containers/0/args", "value": [
  "server",
  "--auth-mode=server"
]}]'
```
### Port forward

```
kubectl -n argo port-forward deployment/argo-server 2746:2746
```