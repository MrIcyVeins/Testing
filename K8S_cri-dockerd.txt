https://gist.github.com/saiyam1814/801db1288c690a969e7174eca89c65b2
-------------------------------------------------------------

sudo apt-get update / sudo yum update
sudo apt -y install vim git

wget https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.1/cri-dockerd-0.3.1.amd64.tgz
tar -xvf cri-dockerd-0.3.1.amd64.tgz

sudo apt install docker.io --- ubuntu
curl -fsSL https://get.docker.com -o get-docker.sh --- centos
sudo sh get-docker.sh

sudo systemctl start docker
sudo systemctl enable docker

#sudo groupadd docker
#sudo usermod -aG docker $USER

cd cri-dockerd
mkdir -p /usr/local/bin
sudo install -o root -g root -m 0755 ./cri-dockerd /usr/local/bin/cri-dockerd

sudo tee /etc/systemd/system/cri-docker.service << EOF
[Unit]
Description=CRI Interface for Docker Application Container Engine
Documentation=https://docs.mirantis.com
After=network-online.target firewalld.service docker.service
Wants=network-online.target
Requires=cri-docker.socket
[Service]
Type=notify
ExecStart=/usr/local/bin/cri-dockerd --container-runtime-endpoint fd:// --network-plugin=
ExecReload=/bin/kill -s HUP $MAINPID
TimeoutSec=0
RestartSec=2
Restart=always
StartLimitBurst=3
StartLimitInterval=60s
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
TasksMax=infinity
Delegate=yes
KillMode=process
[Install]
WantedBy=multi-user.target
EOF

sudo tee /etc/systemd/system/cri-docker.socket << EOF
[Unit]
Description=CRI Docker Socket for the API
PartOf=cri-docker.service
[Socket]
ListenStream=%t/cri-dockerd.sock
SocketMode=0660
SocketUser=root
SocketGroup=docker
[Install]
WantedBy=sockets.target
EOF

sudo systemctl daemon-reload
sudo systemctl enable cri-docker.service
sudo systemctl enable --now cri-docker.socket

--UBUNTU--
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
echo "step1"
echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
echo "kubeadm install"
sudo apt update -y
sudo apt -y install vim git curl wget kubelet kubeadm kubectl

#kubelet=1.24.0-00 kubeadm=1.24.0-00 kubectl=1.24.0-00

--CENTOS--
cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

sudo yum install -y kubelet kubeadm kubectl

echo "memory swapoff"
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
sudo swapoff -a
sudo modprobe overlay
sudo modprobe br_netfilter
sudo tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
sudo sysctl --system

--- ON CONTROL PLANE ---
sudo kubeadm init --apiserver-advertise-address <master-ip-address> --pod-network-cidr=172.16.0.0/16 --cri-socket unix:///var/run/cri-dockerd.sock

kubeadm token create --print-join-command  --- create tokken

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

--- ON WORKER NODES ---
sudo kubeadm join <master-ip-address>:6443 --cri-socket unix:///var/run/cri-dockerd.sock --token 0k3... \
        --discovery-token-ca-cert-hash sha256:3e3...


--------CENTOS fix kube-proxy error---------
yum -y install systemd-networkd
systemctl disable network NetworkManager
systemctl enable systemd-networkd systemd-resolved

mkdir -p /etc/systemd/network/
sudo vi /etc/systemd/network/99-wildcard.network

[Match]
Name=enp*

[Network]
DHCP=yes
IPv6AcceptRA=yes

rm -f /etc/resolv.conf
ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf
---------------------------------------

---CALICO INSTALL---

curl https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml -O
vi calico.yaml
kubectl apply -f calico.yaml

---HELM INSTALL---
wget https://get.helm.sh/helm-v3.11.0-linux-amd64.tar.gz
tar -zxvf helm-v3.11.0-linux-amd64.tar.gz
sudo mv linux-amd64/helm /usr/local/bin/

